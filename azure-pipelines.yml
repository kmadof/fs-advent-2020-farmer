pool:
  vmImage: 'ubuntu-latest'

variables:
  project: campo

stages:
  - stage: Build
    jobs:
    - job: Build
      steps:
      - script: |
          dotnet restore
          dotnet build
          dotnet publish -o $(Pipeline.Workspace)
        displayName: 'Build the app'
        workingDirectory: "src"
      - task: PublishPipelineArtifact@1
        displayName: "Publish Farmer artifact"
        inputs:
          targetPath: '$(Pipeline.Workspace)' 
          artifactName: 'farmer'
  - stage: Dev
    jobs:
    - deployment: DevDeploy
      environment: '$(project)-dev'
      variables:
        env: dev
      strategy:
        runOnce:
          deploy:
            steps:
            - script: dotnet FarmerFun.dll true $(project) $(env) $(dev-sql-password)
              displayName: "Create $(env) template"
              workingDirectory: '$(Pipeline.Workspace)/farmer' 
            - task: PublishPipelineArtifact@1
              displayName: "Publish $(env) template"
              inputs:
                targetPath: '$(Pipeline.Workspace)/farmer/$(project)-$(env).json'
                artifactName: '$(env)'
            - task: AzureCLI@2
              displayName: "Deploy $(env) resources"
              inputs:
                azureSubscription: 'full-subscription'
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: dotnet FarmerFun.dll false $(project) $(env) $(dev-sql-password)
                workingDirectory: '$(Pipeline.Workspace)/farmer' 
            - script: dotnet FarmerFun.dll false $(project) $(env) $(dev-sql-password)
              enabled: false
              displayName: "Deploy $(env) resources"
              workingDirectory: '$(Pipeline.Workspace)/farmer' 
  - stage: Staging
    jobs:
    - deployment: StagingDeploy
      environment: '$(project)-staging'
      variables:
        env: staging
      strategy:
        runOnce:
          deploy:
            steps:
            - script: dotnet FarmerFun.dll true $(project) $(env) $(dev-sql-password)
              displayName: "Create $(env) template"
              workingDirectory: '$(Pipeline.Workspace)/farmer' 
            - task: PublishPipelineArtifact@1
              displayName: "Publish $(env) template"
              inputs:
                targetPath: '$(Pipeline.Workspace)/farmer/$(project)-$(env).json'
                artifactName: '$(env)'
            - task: AzureCLI@2
              displayName: "Deploy $(env) resources"
              inputs:
                azureSubscription: 'full-subscription'
                scriptType: 'pscore'
                scriptLocation: 'inlineScript'
                inlineScript: dotnet FarmerFun.dll false $(project) $(env) $(dev-sql-password)
                workingDirectory: '$(Pipeline.Workspace)/farmer' 
            - script: dotnet FarmerFun.dll false $(project) $(env) $(dev-sql-password)
              enabled: false
              displayName: "Deploy $(env) resources"
              workingDirectory: '$(Pipeline.Workspace)/farmer' 